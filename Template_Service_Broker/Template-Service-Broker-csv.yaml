apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: >-
      [{"apiVersion":"osb.openshift.io/v1alpha1","kind":"TemplateServiceBroker","metadata":{"name":"template-service-broker","namespace":"openshift-template-service-broker"},"spec":{"size":3,"version":"3.2.13"}}]
    olm.operatorGroup: openshift-qsf4s
    olm.operatorNamespace: openshift
    olm.targetNamespaces: openshift
  selfLink: >-
    /apis/operators.coreos.com/v1alpha1/namespaces/openshift/clusterserviceversions/templateservicebrokeroperator.v0.2.0
  resourceVersion: '46895'
  name: templateservicebrokeroperator.v0.2.0
  uid: e9168c45-5482-11e9-92be-02e4584e8e3c
  creationTimestamp: '2019-04-01T13:34:44Z'
  generation: 1
  namespace: openshift
  labels:
    olm.api.TemplateServiceBroker.v1alpha1.osb.openshift.io: provided
spec:
  customresourcedefinitions:
    owned:
      - description: An Open Service Broker supporting management of OpenShift templates.
        displayName: Template Service Broker
        kind: TemplateServiceBroker
        name: templateservicebrokers.osb.openshift.io
        version: v1alpha1
  apiservicedefinitions: {}
  keywords:
    - template
    - broker
    - open service broker
  displayName: Template Service Broker Operator
  provider:
    name: 'Red Hat, Inc.'
  maturity: alpha
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  version: 0.2.0
  links:
    - name: Documentation
      url: >-
        https://docs.okd.io/latest/architecture/service_catalog/template_service_broker.html
    - name: Source Code
      url: >-
        https://github.com/openshift/origin/tree/master/pkg/templateservicebroker
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - osb.openshift.io
              resources:
                - templateservicebrokers
                - templateservicebrokers/status
              verbs:
                - '*'
            - apiGroups:
                - servicecatalog.k8s.io
              resources:
                - clusterservicebrokers
                - servicebrokers
              verbs:
                - '*'
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
                - clusterrolebindings
              verbs:
                - create
                - delete
                - patch
                - get
                - list
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.openshift.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - template.openshift.io
              resources:
                - brokertemplateinstances
              verbs:
                - create
                - delete
                - get
                - update
            - apiGroups:
                - template.openshift.io
              resources:
                - brokertemplateinstances/finalizers
              verbs:
                - update
            - apiGroups:
                - template.openshift.io
              resources:
                - templateinstances
              verbs:
                - assign
                - create
                - delete
                - get
            - apiGroups:
                - template.openshift.io
              resources:
                - templates
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
            - apiGroups:
                - ''
              resources:
                - configmaps
                - services
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - routes
              verbs:
                - get
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - events
              verbs:
                - create
                - patch
                - update
            - nonResourceURLs:
                - /brokers/template.openshift.io/*
              verbs:
                - delete
                - get
                - put
                - update
          serviceAccountName: template-service-broker-operator
      deployments:
        - name: template-service-broker-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: template-service-broker-operator-alm-owned
            template:
              metadata:
                labels:
                  name: template-service-broker-operator-alm-owned
                name: template-service-broker-operator-alm-owned
              spec:
                containers:
                  - env:
                      - name: IMAGE
                        value: >-
                          docker.io/openshift/origin-template-service-broker:v4.0
                      - name: OPERATOR_NAME
                        value: template-service-broker-operator
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                    image: >-
                      docker.io/automationbroker/template-service-broker-operator:v4.0
                    imagePullPolicy: Always
                    name: template-service-broker-operator
                serviceAccountName: template-service-broker-operator
      permissions:
        - rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - configmaps
                - secrets
                - services
                - serviceaccounts
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - apps.openshift.io
              resources:
                - deploymentconfigs
              verbs:
                - '*'
          serviceAccountName: template-service-broker-operator
    strategy: deployment
  maintainers:
    - email: ansible-service-broker@redhat.com
      name: 'Red Hat, Inc.'
  description: >
    The Template Service Broker implements the [Open Service Broker

    API](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md)

    endpoints:

    - *Catalog*: returns a list of available templates as OSB API
      *Service* objects (the templates are read from one or more
      namespaces configured in the master config).
    - *Provision*: provision a given template (referred by its UID) into a
      namespace.  Under the covers, this creates a non-namespaced
      **BrokerTemplateInstance** object for the template service broker to
      store state associated with the the instantiation, as well as the
      **Secret** and **TemplateInstance** objects which are picked up by
      the **TemplateInstance** controller.  *Provision* is an asynchronous
      operation: it may return before provisioning is completed, and the
      provision status can (must) be recovered via the *Last Operation*
      endpoint (see below).
    - *Bind*: for a given template, return "credentials" exposed in any
      created ConfigMap, Secret, Service or Route object (see
      ExposeAnnotationPrefix and Base64ExposeAnnotationPrefix
      documentation).  The *Bind* call records the fact that it took
      place in the appropriate **BrokerTemplateInstance** object.
    - *Unbind*: this simply removes the metadata previously placed in the
      **BrokerTemplateInstance** object by a *Bind* call.
    - *Deprovision*: removes the objects created by the *Provision* call.
      The garbage collector removes all additional objects created by the
      **TemplateInstance** controller, hopefully transitively, as
      documented above.
    - *Last Operation*: returns the status of the previously run
      asynchronous operation.  In the template service broker, *Provision*
      is the only asynchronous operation.
  selector:
    matchLabels:
      operated-by: templateservicebrokeroperator
  labels:
    alm-status-descriptors: templateservicebrokeroperator.v0.1.0
    operated-by: templateservicebrokeroperator
status:
  reason: InstallSucceeded
  message: install strategy completed with no errors
  lastUpdateTime: '2019-04-01T13:35:18Z'
  requirementStatus:
    - group: operators.coreos.com
      kind: ClusterServiceVersion
      message: CSV missing minimum kube version specification
      name: templateservicebrokeroperator.v0.2.0
      status: NotPresent
      version: v1alpha1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: templateservicebrokers.osb.openshift.io
      status: Present
      uuid: e917f581-5482-11e9-92be-02e4584e8e3c
      version: v1beta1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":[""],"resources":["pods","configmaps","secrets","services","serviceaccounts"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["apps"],"resources":["deployments"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["apps.openshift.io"],"resources":["deploymentconfigs"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["osb.openshift.io"],"resources":["templateservicebrokers","templateservicebrokers/status"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["servicecatalog.k8s.io"],"resources":["clusterservicebrokers","servicebrokers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create","delete","patch","get","list"],"apiGroups":["rbac.authorization.k8s.io"],"resources":["clusterroles","clusterrolebindings"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create"],"apiGroups":["authorization.k8s.io"],"resources":["subjectaccessreviews"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create"],"apiGroups":["authentication.k8s.io"],"resources":["tokenreviews"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create"],"apiGroups":["authorization.openshift.io"],"resources":["subjectaccessreviews"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create","delete","get","update"],"apiGroups":["template.openshift.io"],"resources":["brokertemplateinstances"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["update"],"apiGroups":["template.openshift.io"],"resources":["brokertemplateinstances/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["assign","create","delete","get"],"apiGroups":["template.openshift.io"],"resources":["templateinstances"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get","list","watch"],"apiGroups":["template.openshift.io"],"resources":["templates"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create","delete","get"],"apiGroups":[""],"resources":["secrets"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["configmaps","services"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["routes"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get"],"apiGroups":["route.openshift.io"],"resources":["routes"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["create","patch","update"],"apiGroups":[""],"resources":["events"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["delete","get","put","update"],"nonResourceURLs":["/brokers/template.openshift.io/*"]}
          status: Satisfied
          version: v1beta1
      group: ''
      kind: ServiceAccount
      message: ''
      name: template-service-broker-operator
      status: Present
      version: v1
  certsLastUpdated: null
  lastTransitionTime: '2019-04-01T13:35:18Z'
  conditions:
    - lastTransitionTime: '2019-04-01T13:34:44Z'
      lastUpdateTime: '2019-04-01T13:34:44Z'
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: '2019-04-01T13:34:44Z'
      lastUpdateTime: '2019-04-01T13:34:44Z'
      message: one or more requirements couldn't be found
      phase: Pending
      reason: RequirementsNotMet
    - lastTransitionTime: '2019-04-01T13:34:46Z'
      lastUpdateTime: '2019-04-01T13:34:46Z'
      message: 'all requirements found, attempting install'
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: '2019-04-01T13:34:46Z'
      lastUpdateTime: '2019-04-01T13:34:46Z'
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: '2019-04-01T13:34:46Z'
      lastUpdateTime: '2019-04-01T13:34:47Z'
      message: >
        installing: Waiting: waiting for deployment
        template-service-broker-operator to become ready: Waiting for rollout to
        finish: 0 of 1 updated replicas are available...
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: '2019-04-01T13:35:18Z'
      lastUpdateTime: '2019-04-01T13:35:18Z'
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  phase: Succeeded
  certsRotateAt: null
